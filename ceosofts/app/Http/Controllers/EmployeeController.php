<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Employee;
use App\Models\Department;
use App\Models\Position;
use Carbon\Carbon;
use Illuminate\Support\Facades\Log;

class EmployeeController extends Controller
{
    /**
     * ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
     */
    public function index()
    {
        $employees = Employee::with(['department', 'position'])->paginate(10);
        return view('employees.index', compact('employees'));
    }

    /**
     * ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
     */
    public function create()
    {
        $departments = Department::all();
        $positions = Position::all();
        $employee = null; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô null
        $editMode = false;
        return view('employees.create', compact('departments', 'positions', 'employee', 'editMode'));
    }

    /**
     * ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ First Name & Last Name ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
     */

    public function store(Request $request)
{
    $validatedData = $request->validate([
        'first_name' => 'required|string|max:255',  // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
        'last_name' => 'required|string|max:255',   // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
        'email' => 'nullable|email|unique:employees', 
        'national_id' => 'nullable|string|size:13|unique:employees',
        'driver_license' => 'nullable|string|max:20',
        'date_of_birth' => 'nullable|date',
        'phone' => 'nullable|string|max:20',
        'address' => 'nullable|string',
        'emergency_contact_name' => 'nullable|string|max:255',
        'emergency_contact_phone' => 'nullable|string|max:20',
        'spouse_name' => 'nullable|string|max:255',
        // 'children' => 'nullable|string',
        'tax_deductions' => 'nullable|numeric|min:0',
        'department_id' => 'nullable|exists:departments,id',
        'position_id' => 'nullable|exists:positions,id',
        'salary' => 'nullable|numeric|min:0',
        'employment_status' => 'nullable|in:active,resigned,terminated,on_leave',
        'hire_date' => 'nullable|date',
        'resignation_date' => 'nullable|date|after:hire_date',
    ]);

    // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ NULL ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    // $validatedData['children'] = $request->has('children') ? json_encode($request->children) : json_encode([]);
    // $validatedData['children'] = $request->children ? json_encode(explode(',', $request->children)) : json_encode([]);
    
    
    $validatedData['national_id'] = $request->national_id ?? null;
    $validatedData['email'] = $request->email ?? null;
    $validatedData['department_id'] = $request->department_id ?? null;
    $validatedData['employment_status'] = $request->employment_status ?? 'active'; // ‚úÖ ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô 'active'

    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    Employee::create($validatedData);

    return redirect()->route('employees.index')->with('success', '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
}


    /**
     * ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
     */
    public function edit(Employee $employee)
    {
        $departments = Department::all();
        $positions = Position::all();
        $editMode = true;
        return view('employees.edit', compact('employee', 'departments', 'positions', 'editMode'));
    }

    /**
     * ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ First Name & Last Name ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
     */
    public function update(Request $request, Employee $employee)
    {
        // $request->validate([
            $validatedData = $request->validate([
            'first_name' => 'required|string|max:255',  // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
            'last_name' => 'required|string|max:255',   // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö
            'email' => 'nullable|email|unique:employees,email,' . $employee->id,
            'national_id' => 'nullable|string|size:13|unique:employees,national_id,' . $employee->id,
            'driver_license' => 'nullable|string|max:20',
            'date_of_birth' => 'nullable|date',
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string',
            'emergency_contact_name' => 'nullable|string|max:255',
            'emergency_contact_phone' => 'nullable|string|max:20',
            'spouse_name' => 'nullable|string|max:255',
            // 'children' => 'nullable|string',
            'tax_deductions' => 'nullable|numeric|min:0',
            'department_id' => 'nullable|exists:departments,id',
            'position_id' => 'nullable|exists:positions,id',
            'salary' => 'nullable|numeric|min:0',
            'employment_status' => 'nullable|in:active,resigned,terminated,on_leave',
            'hire_date' => 'nullable|date',
            'resignation_date' => 'nullable|date|after:hire_date',
        ]);

        // üîπ ‡πÅ‡∏õ‡∏•‡∏á children ‡πÄ‡∏õ‡πá‡∏ô JSON
        // $validatedData = $request->all();
        // $validatedData['children'] = $request->has('children') ? json_encode($request->children) : json_encode([]);

        // üîπ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
        $employee->update($validatedData);

        return redirect()->route('employees.index')->with('success', '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    }

    /**
     * ‚úÖ ‡∏•‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
     */
    public function destroy(Employee $employee)
    {
        $employee->delete();
        return redirect()->route('employees.index')->with('success', '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    }
}
