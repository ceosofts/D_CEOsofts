การตั้งค่าการทำงานของโปรเจค Laravel สามารถทำได้เป็นขั้นตอนง่าย ๆ เพื่อให้โปรเจคพร้อมใช้งาน ฉันได้แบ่งขั้นตอนออกเป็นลำดับด้านล่างนี้ พร้อมคำอธิบายและคำสั่งที่ต้องใช้ค่ะ:

1. ติดตั้ง Dependencies ด้วย Composer
หลังจากแตกไฟล์โปรเจคแล้ว ให้เปิด Terminal หรือ Command Prompt แล้วรันคำสั่งต่อไปนี้ในโฟลเดอร์โปรเจค:
>>> composer install
หมายเหตุ: คำสั่งนี้จะดาวน์โหลดและติดตั้ง dependencies ที่ระบุไว้ใน composer.json เช่น Laravel Framework และ Package ที่ใช้ในโปรเจค

2. สร้างไฟล์ .env
โปรเจค Laravel ต้องใช้ไฟล์ .env สำหรับตั้งค่าการทำงาน เช่น การเชื่อมต่อฐานข้อมูล

คัดลอกไฟล์ .env.example เป็น .env โดยรันคำสั่ง:
>>> cp .env.example .env

3. ตั้งค่าการเชื่อมต่อฐานข้อมูล
เปิดไฟล์ .env และตั้งค่าการเชื่อมต่อฐานข้อมูล เช่น:

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=ชื่อฐานข้อมูล
DB_USERNAME=ชื่อผู้ใช้ฐานข้อมูล
DB_PASSWORD=รหัสผ่านฐานข้อมูล

หมายเหตุ: ตรวจสอบให้แน่ใจว่าคุณสร้างฐานข้อมูลที่กำหนดใน DB_DATABASE แล้ว

4. สร้าง Application Key
รันคำสั่งนี้เพื่อสร้าง Application Key:

>>> php artisan key:generate
ผลลัพธ์: Laravel จะสร้าง APP_KEY ในไฟล์ .env เพื่อใช้สำหรับการเข้ารหัส

5. รัน Migration และ Seeder
ใช้คำสั่งต่อไปนี้เพื่อสร้างตารางในฐานข้อมูลและเพิ่มข้อมูลตัวอย่าง:

>>> php artisan migrate --seed
คำอธิบาย:
migrate: สร้างตารางในฐานข้อมูลตามไฟล์ใน database/migrations
--seed: รัน Seeder เพื่อลงข้อมูลตัวอย่างจากไฟล์ใน database/seeders

6. ติดตั้ง Dependencies ของ Frontend
รันคำสั่งต่อไปนี้เพื่อติดตั้ง dependencies ของ JavaScript และ CSS:

>>> npm install
หมายเหตุ: หากยังไม่ได้ติดตั้ง Node.js และ NPM คุณต้องติดตั้งก่อน

7. คอมไพล์ไฟล์ Frontend
คอมไพล์ไฟล์ JavaScript และ CSS ด้วย Vite:

>>> npm run dev
ผลลัพธ์: ไฟล์ CSS และ JS จะพร้อมใช้งานในโฟลเดอร์ public/

8. รันเซิร์ฟเวอร์ท้องถิ่น
ใช้คำสั่งนี้เพื่อรันโปรเจคในเซิร์ฟเวอร์ท้องถิ่น:

>>> php artisan serve
ผลลัพธ์: คุณสามารถเข้าถึงแอปพลิเคชันได้ผ่าน URL เช่น http://127.0.0.1:8000

9. ทดสอบระบบ
เข้าไปที่ URL ของแอปพลิเคชัน (เช่น http://127.0.0.1:8000) เพื่อตรวจสอบว่าระบบทำงานได้ปกติ
ทดสอบฟังก์ชันที่สำคัญ เช่น การล็อกอิน การสร้างข้อมูล และการแสดงผลหน้าเว็บ

เช็คลิสต์การตั้งค่า
ขั้นตอน	สถานะ	ข้อมูลที่ร้องขอเพิ่มเติม

ติดตั้ง Dependencies (composer)	⬜	ไม่มี
สร้างไฟล์ .env	⬜	ตั้งค่า DB_DATABASE, DB_USERNAME ฯลฯ
สร้าง Application Key	⬜	ไม่มี
รัน Migration และ Seeder	⬜	สร้างฐานข้อมูลใน MySQL
ติดตั้ง Frontend Dependencies (npm)	⬜	ติดตั้ง Node.js หากยังไม่มี
คอมไพล์ไฟล์ Frontend (npm run dev)	⬜	ไม่มี
รันเซิร์ฟเวอร์ (php artisan serve)	⬜	ไม่มี
ทดสอบระบบ	⬜	ตรวจสอบ URL ของระบบ

คำสั่ง Artisan สำหรับตรวจสอบการเชื่อมต่อฐานข้อมูล
เปิด Terminal หรือ Command Prompt แล้วรันคำสั่งต่อไปนี้ในโฟลเดอร์โปรเจคของคุณ:

>>> php artisan db:show

ผลลัพธ์: คำสั่งนี้จะแสดงรายละเอียดตารางทั้งหมดในฐานข้อมูล หากเชื่อมต่อสำเร็จ

ผลลัพธ์นี้แสดงว่าตาราง users ของคุณมีข้อมูลอยู่ 1 ระเบียน โดยรายละเอียดมีดังนี้:

ข้อมูลในตาราง users
คอลัมน์	ค่า

id	1
name	Test User
email	test@example.com
email_verified_at	2025-01-27 13:56:48
password	(รหัสผ่านที่เข้ารหัส)
remember_token	RKwU8o9vXC
created_at	2025-01-27 13:56:49
updated_at	2025-01-27 13:56:49

ในกรณีที่คุณมีไฟล์ฐานข้อมูล SQLite อยู่แล้วในตำแหน่ง D:\D_CEOsofts\ceosofts\database\database.sqlite แต่ยังคงพบปัญหา Database file at path [laravel] does not exist นั่นแสดงว่า Laravel ไม่สามารถเข้าถึงไฟล์ฐานข้อมูลได้เนื่องจากการตั้งค่าที่ไม่ถูกต้องในไฟล์ .env

วิธีแก้ไข
คุณสามารถแก้ไขได้ตามขั้นตอนต่อไปนี้:

1. แก้ไขไฟล์ .env
เปิดไฟล์ .env ในโปรเจคของคุณ และอัปเดตค่าดังนี้:

DB_CONNECTION=sqlite
DB_DATABASE=/mnt/d/D_CEOsofts/ceosofts/database/database.sqlite

2. ตรวจสอบไฟล์ฐานข้อมูล
ตรวจสอบให้แน่ใจว่าไฟล์ database.sqlite อยู่ในตำแหน่งดังกล่าวจริง:


>>> ls /mnt/d/D_CEOsofts/ceosofts/database/
คุณควรเห็นไฟล์ database.sqlite แสดงในผลลัพธ์

2. ล้าง Cache ของ Laravel
หลังจากแก้ไขไฟล์ .env แล้ว ให้ล้าง Cache ของ Laravel เพื่อให้การตั้งค่าใหม่มีผล:

bash
คัดลอก
แก้ไข

php artisan config:clear
php artisan cache:clear

3. ตรวจสอบสิทธิ์การเข้าถึงไฟล์
ตรวจสอบว่าไฟล์ database.sqlite มีสิทธิ์ที่เหมาะสมเพื่อให้ Laravel เข้าถึงได้:

บน Windows:
คลิกขวาที่ไฟล์ database.sqlite
เลือก Properties
ไปที่แท็บ Security และตรวจสอบให้แน่ใจว่า Users หรือ ระบบของคุณ มีสิทธิ์ Read/Write

4. ทดสอบการทำงาน
รันเซิร์ฟเวอร์ใหม่ด้วยคำสั่ง:

>>> php artisan serve

แล้วลองเข้าผ่าน URL เดิม:

arduino
คัดลอก
แก้ไข
http://127.0.0.1:8000/
หากยังพบปัญหา
ตรวจสอบเส้นทางอีกครั้ง: ให้แน่ใจว่าไฟล์อยู่ในตำแหน่งที่กำหนดจริง (D:/D_CEOsofts/ceosofts/database/database.sqlite)

ตรวจสอบการเชื่อมต่อด้วย Tinker: ลองรันคำสั่งนี้ใน Tinker:

เมื่อคุณใช้ WSL (Windows Subsystem for Linux) การตั้งค่า DB_DATABASE=D:/D_CEOsofts/ceosofts/database/database.sqlite อาจทำให้เกิดปัญหา เนื่องจาก WSL ไม่สามารถเข้าถึงไฟล์ในรูปแบบของ Windows Path (D:/...) ได้โดยตรง

วิธีแก้ไข
ให้ใช้ WSL Path ซึ่งเป็นรูปแบบที่สามารถเข้าถึงไฟล์ในไดรฟ์ Windows ได้ เช่น /mnt/d/...

**1. เปลี่ยน DB_DATABASE ในไฟล์ .env
เปิดไฟล์ .env และเปลี่ยนค่า DB_DATABASE ให้เป็น WSL Path:

/////////////////////////////////////// update at 27 jan 2025 ////////////////////////

http://127.0.0.1:8000/ or welcome >>> it is work
http://127.0.0.1:8000/login >>> it is work
http://127.0.0.1:8000/logout >>> it is work
http://127.0.0.1:8000/dashboard >>> it is work
http://127.0.0.1:8000/customers >>> it is work
http://127.0.0.1:8000/products >>> it is work
ระบบ ถ้าไม่ login จะเข้า home + dashboard ไม่ได้  >>> it is work 

/////////////////////////////////////// update at 27 jan 2025 ////////////////////////
user yai
email yai@hotmail.com
password 12345678
/////////////////////////////////////// update at 27 jan 2025 ////////////////////////
/////////////////////////////////////// update at 28 jan 2025 ////////////////////////
extracted_project_v2/
  D_CEOsofts-main/
    .gitattributes
    Project Info/
      0.0 ProjectStatus.txt
      9.0 คำสั่ง.txt
      ERP_CRM_Detailed_Guide.txt
      README.md
      BIN/
        0.0 ProjectStatusR1.txt
        ...
    ceosofts/
      .editorconfig
      .env.example
      .gitattributes
      .gitignore
      README.md
      artisan
      composer.json
      composer.lock
      ...
      app/
        Http/
          Controllers/
            Controller.php
            CustomerController.php
            DashboardController.php
            ...
        Models/
          Customer.php
          Order.php
          ...
      ...
      database/
        .gitignore
        factories/
          UserFactory.php
        migrations/
          2025_01_21_140456_create_customers_table.php
          ...
      resources/
        views/
          dashboard.blade.php
          home.blade.php
          welcome.blade.php
          ...
      routes/
        web.php
      ...

http://127.0.0.1:8000/ or welcome >>> it is work
http://127.0.0.1:8000/login >>> it is work
http://127.0.0.1:8000/logout >>> it is work
http://127.0.0.1:8000/dashboard >>> it is work
http://127.0.0.1:8000/customers >>> it is work
http://127.0.0.1:8000/products >>> it is work
ระบบ ถ้าไม่ login จะเข้า home + dashboard ไม่ได้  >>> it is work 

update products    28 Jan 2025 ซึ่งยังสวยดี แต่ดึกแล้ว เลยพอก่อน   
/////////////////////////////////////// update at 28 jan 2025 ////////////////////////