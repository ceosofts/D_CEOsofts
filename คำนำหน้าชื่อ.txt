คู่มือการสร้างระบบ Setting คำนำหน้าชื่อ (เช่น นาย, นางสาว, เด็กชาย) โดย Admin
Laravel 11.38.2 + SQLite + Role-based Access Control (RBAC)

✅ เป้าหมายของระบบ

ให้ Admin สามารถเพิ่ม/แก้ไข/ลบ คำนำหน้าชื่อ ได้
จัดเก็บข้อมูลใน ฐานข้อมูล SQLite
เพิ่มเมนูใน Admin Setting (app.blade.php)
✅ 1. สร้างฐานข้อมูลสำหรับคำนำหน้าชื่อ
📌 1.1 สร้าง Migration สำหรับตาราง prefixes
📌 รันคำสั่งนี้ใน Terminal

bash
คัดลอก
แก้ไข
php artisan make:migration create_prefixes_table --create=prefixes
📌 เปิดไฟล์ database/migrations/xxxx_xx_xx_xxxxxx_create_prefixes_table.php และเพิ่มโค้ดนี้

php
คัดลอก
แก้ไข
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up(): void
    {
        Schema::create('prefixes', function (Blueprint $table) {
            $table->id();
            $table->string('name')->unique(); // เช่น "นาย", "นางสาว"
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('prefixes');
    }
};
📌 รันคำสั่งเพื่อสร้างตารางในฐานข้อมูล

bash
คัดลอก
แก้ไข
php artisan migrate
✅ ตอนนี้ตาราง prefixes ถูกสร้างใน SQLite แล้ว!

✅ 2. สร้าง Model Prefix
📌 รันคำสั่งสร้าง Model

bash
คัดลอก
แก้ไข
php artisan make:model Prefix
📌 เปิดไฟล์ app/Models/Prefix.php และเพิ่มโค้ดนี้

php
คัดลอก
แก้ไข
namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Prefix extends Model
{
    use HasFactory;
    protected $fillable = ['name'];
}
✅ Model Prefix จะช่วยให้เราสามารถจัดการข้อมูลได้ง่ายขึ้น

✅ 3. สร้าง Controller สำหรับจัดการคำนำหน้าชื่อ
📌 รันคำสั่งสร้าง Controller

bash
คัดลอก
แก้ไข
php artisan make:controller Admin/PrefixController --resource --model=Prefix
📌 เปิดไฟล์ app/Http/Controllers/Admin/PrefixController.php และเพิ่มโค้ดนี้

php
คัดลอก
แก้ไข
namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Prefix;

class PrefixController extends Controller
{
    public function index()
    {
        $prefixes = Prefix::all();
        return view('admin.prefixes.index', compact('prefixes'));
    }

    public function create()
    {
        return view('admin.prefixes.create');
    }

    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:255|unique:prefixes,name',
        ]);

        Prefix::create(['name' => $request->name]);

        return redirect()->route('admin.prefixes.index')->with('success', 'เพิ่มคำนำหน้าชื่อเรียบร้อยแล้ว!');
    }

    public function edit(Prefix $prefix)
    {
        return view('admin.prefixes.edit', compact('prefix'));
    }

    public function update(Request $request, Prefix $prefix)
    {
        $request->validate([
            'name' => 'required|string|max:255|unique:prefixes,name,' . $prefix->id,
        ]);

        $prefix->update(['name' => $request->name]);

        return redirect()->route('admin.prefixes.index')->with('success', 'แก้ไขคำนำหน้าชื่อเรียบร้อยแล้ว!');
    }

    public function destroy(Prefix $prefix)
    {
        $prefix->delete();

        return redirect()->route('admin.prefixes.index')->with('success', 'ลบคำนำหน้าชื่อเรียบร้อยแล้ว!');
    }
}
✅ Controller นี้รองรับการเพิ่ม/แก้ไข/ลบข้อมูล

✅ 4. สร้าง Route สำหรับจัดการคำนำหน้าชื่อ
📌 เปิดไฟล์ routes/web.php และเพิ่ม Route สำหรับ Admin

php
คัดลอก
แก้ไข
use App\Http\Controllers\Admin\PrefixController;

Route::middleware(['auth', 'role:admin'])->prefix('admin')->name('admin.')->group(function () {
    Route::resource('prefixes', PrefixController::class);
});
✅ ตอนนี้ Admin สามารถเข้าถึง URL ต่อไปนี้ได้:

/admin/prefixes → ดูรายการ
/admin/prefixes/create → เพิ่มคำนำหน้า
/admin/prefixes/{id}/edit → แก้ไข
/admin/prefixes/{id} (DELETE) → ลบ
✅ 5. สร้าง Views สำหรับจัดการคำนำหน้าชื่อ
📌 5.1 สร้างไฟล์ index.blade.php (แสดงรายการ)
📌 สร้างไฟล์ resources/views/admin/prefixes/index.blade.php

blade
คัดลอก
แก้ไข
@extends('layouts.app')

@section('title', 'จัดการคำนำหน้าชื่อ')

@section('content')
<div class="container">
    <h1>จัดการคำนำหน้าชื่อ</h1>
    <a href="{{ route('admin.prefixes.create') }}" class="btn btn-success mb-3">เพิ่มคำนำหน้า</a>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>คำนำหน้า</th>
                <th>จัดการ</th>
            </tr>
        </thead>
        <tbody>
            @foreach ($prefixes as $prefix)
                <tr>
                    <td>{{ $prefix->id }}</td>
                    <td>{{ $prefix->name }}</td>
                    <td>
                        <a href="{{ route('admin.prefixes.edit', $prefix->id) }}" class="btn btn-warning btn-sm">แก้ไข</a>

                        <form action="{{ route('admin.prefixes.destroy', $prefix->id) }}" method="POST" style="display:inline;" onsubmit="return confirm('คุณแน่ใจหรือไม่?');">
                            @csrf
                            @method('DELETE')
                            <button type="submit" class="btn btn-danger btn-sm">ลบ</button>
                        </form>
                    </td>
                </tr>
            @endforeach
        </tbody>
    </table>
</div>
@endsection
✅ 6. เพิ่ม Link ไปที่ app.blade.php
📌 เปิดไฟล์ resources/views/layouts/app.blade.php และเพิ่มลิงก์ใน Admin Setting

blade
คัดลอก
แก้ไข
@can('manage prefixes')
    <a class="dropdown-item" href="{{ route('admin.prefixes.index') }}">
        <i class="bi bi-list"></i> จัดการคำนำหน้าชื่อ
    </a>
@endcan
✅ ลิงก์นี้จะแสดงเฉพาะ Admin ที่มีสิทธิ์ manage prefixes เท่านั้น

✅ 7. ล้าง Cache และทดสอบ
📌 รันคำสั่งนี้เพื่อให้ Laravel โหลดข้อมูลใหม่

bash
คัดลอก
แก้ไข
php artisan cache:clear
php artisan config:clear
php artisan view:clear
php artisan route:clear
📌 จากนั้นทดสอบในเว็บเบราว์เซอร์:
1️⃣ เข้าไปที่ /admin/prefixes
2️⃣ ลองเพิ่มคำนำหน้าชื่อใหม่
3️⃣ ลองแก้ไข
4️⃣ ลองลบ

🚀 สรุปขั้นตอนที่ทำ
✅ 1. สร้างฐานข้อมูล prefixes
✅ 2. สร้าง Model Prefix
✅ 3. สร้าง Controller PrefixController
✅ 4. กำหนด Route สำหรับ admin.prefixes
✅ 5. สร้าง View (index, create, edit)
✅ 6. เพิ่ม Link ไปที่ app.blade.php
✅ 7. ล้าง Cache และทดสอบ

🔥 ตอนนี้ระบบสามารถใช้งานได้เต็มรูปแบบ!
ถ้ามีปัญหาหรืออยากเพิ่มฟีเจอร์อะไรเพิ่มเติม แจ้งมาได้เลยครับ 😊🚀











